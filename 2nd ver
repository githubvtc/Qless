package com.example.qless;

import java.io.*;
import java.net.*;
/*
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
*/
import android.os.Bundle;
import android.os.StrictMode;

import android.util.Log;
import android.app.Activity;
import android.view.Menu;
import android.widget.Button;
import android.view.View;
//import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends Activity{
	Button login;
	EditText email;
	EditText pwd;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);
        setContentView(R.layout.activity_main);
        initVariables();
        //addListenerOnButton();
        testResult();
       
        
    }
    private void testResult() {
    	Log.e("em",email.toString());
    	Log.e("pw",pwd.toString());
    	Log.e("em","done");
	}
	private void initVariables() {
    	email = (EditText) findViewById(R.id.emailAdd) ;
        pwd= (EditText) findViewById(R.id.password);	
        login=(Button)findViewById(R.id.loginButton);
		
	}/*
	public void addListenerOnButton() {
		
    	login.setOnClickListener(new OnClickListener() {
     
    		@Override
    		public void onClick(View v) {
     
    		  Toast.makeText(MainActivity.this, "Please wait",
    			Toast.LENGTH_SHORT).show();
    		}
     
    	});
    }
    */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    public void authenticateLogin(View v) {
    	Toast.makeText(MainActivity.this, post("hus"),
				Toast.LENGTH_SHORT).show();
    	if (email.getText().toString().equals("a@a.c") && 
    			pwd.getText().toString().equals("012")) {
    		Toast.makeText(MainActivity.this, "Hello admin!", 
    				Toast.LENGTH_SHORT).show();
    		//excutePost();
    	} else {
    		Toast.makeText(MainActivity.this, "Seems like you 're not admin!",
    				Toast.LENGTH_SHORT).show();
    	}
    }
    /*
    public void excutePost()
    {
      URL url;
      HttpURLConnection connection = null;
      
      try {
    	  String urlParameters =
      	        "name=" + URLEncoder.encode("gugu", "UTF-8") +
      	        "&price=" + URLEncoder.encode("1", "UTF-8") +
      	        "&quantity=" + URLEncoder.encode("2", "UTF-8");
        //Create connection
        url = new URL("http://128.199.116.200/sample/addproduct");
        connection = (HttpURLConnection)url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", 
             "application/x-www-form-urlencoded");
  			
        connection.setRequestProperty("Content-Length", "" + 
                 Integer.toString(urlParameters.getBytes().length));
        connection.setRequestProperty("Content-Language", "en-US");  
  			
        connection.setUseCaches (false);
        connection.setDoInput(true);
        connection.setDoOutput(true);
       
        
        //Send request
        DataOutputStream wr = new DataOutputStream (
                    connection.getOutputStream ());
        wr.writeBytes (urlParameters);
        wr.flush ();
        wr.close ();

        //Get Response	
        InputStream is = connection.getInputStream();
        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
        String line;
        StringBuffer response = new StringBuffer(); 
        while((line = rd.readLine()) != null) {
          response.append(line);
          response.append('\r');
        }
        rd.close();
        Toast.makeText(MainActivity.this, (CharSequence) response,
				Toast.LENGTH_SHORT).show();

      } catch (Exception e) {

        e.printStackTrace();

      } finally {

        if(connection != null) {
          connection.disconnect(); 
        }
      }
    }*/
	private String post(String string) {
		 try { 
		String encodedQuery = URLEncoder.encode(string, "UTF-8");
	        // This is the data that is going to be send to itcuties.com via POST request
	        // 'e' parameter contains data to echo
	        String postData = "e=" + encodedQuery;
	         
	        // Connect to google.com
	        URL url = new URL("http://echo.itcuties.com");
	        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
	        connection.setDoOutput(true);
	        connection.setRequestMethod("POST");
	        connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
	        connection.setRequestProperty("Content-Length",  String.valueOf(postData.length()));
	         
	        // Write data
	        OutputStream os = connection.getOutputStream();
	        os.write(postData.getBytes());
	         
	        // Read response
	        StringBuilder responseSB = new StringBuilder();
	        BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));
	          
	        String line;
	        while ( (line = br.readLine()) != null)
	            responseSB.append(line);
	                 
	        // Close streams
	        br.close();
	        os.close();
	       
	        return responseSB.toString();
		 } catch (IOException ioe) {
	            ioe.printStackTrace();
	            return null;
	    } 
		 
	} 
	    
}

